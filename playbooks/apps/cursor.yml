# CrimsonCFG-Name: Cursor
# CrimsonCFG-Description: Install Cursor (AppImage)
# CrimsonCFG-Essential: false
---
- name: Install Cursor (AppImage)
  hosts: all
  become: true
  vars_files:
    - "{{ lookup('env', 'HOME') + '/.config/com.crimson.cfg/local.yml' }}"

  tasks:

    #######################
    # Ensure AppImage folder exists
    #######################
    - name: Create AppImage folder for Cursor
      ansible.builtin.file:
        path: "{{ cursor_appimage_dir }}"
        state: directory
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: '0755'

    #######################
    # Download AppImage
    #######################
    - name: Download Cursor AppImage
      ansible.builtin.get_url:
        url: "{{ cursor_appimage_url }}"
        dest: "{{ cursor_appimage_dir }}/{{ cursor_appimage_filename }}"
        mode: '0755'
        owner: "{{ user }}"
        group: "{{ user }}"

    #######################
    # Extract icon from AppImage
    #######################
    - name: Extract AppImage to get icon
      ansible.builtin.shell: |
        cd {{ cursor_appimage_dir }}
        ./{{ cursor_appimage_filename }} --appimage-extract
      args:
        executable: /bin/bash
      changed_when: false

    - name: Copy icon to proper location
      ansible.builtin.copy:
        src: "{{ cursor_appimage_dir }}/squashfs-root/usr/share/icons/hicolor/256x256/apps/cursor.png"
        dest: "{{ cursor_appimage_dir }}/Cursor.png"
        remote_src: yes
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: '0644'
      ignore_errors: true

    - name: Clean up extracted AppImage
      ansible.builtin.file:
        path: "{{ cursor_appimage_dir }}/squashfs-root"
        state: absent

    #######################
    # Create .desktop file for Cursor
    #######################
    - name: Create Cursor .desktop entry in user applications
      ansible.builtin.copy:
        dest: "{{desktop_dotfile_folder}}/cursorai_cursor.desktop"
        content: |
          [Desktop Entry]
          Name=Cursor
          Comment=The AI Code Editor.
          GenericName=Text Editor
          Exec={{ cursor_appimage_dir }}/{{cursor_appimage_filename}} --no-sandbox %F
          Icon={{ cursor_appimage_dir }}/Cursor.png
          Type=Application
          StartupNotify=false
          StartupWMClass=Cursor
          Categories=TextEditor;Development;IDE;
          MimeType=application/x-cursor-workspace;
          Actions=new-empty-window;
          Keywords=cursor;

          X-AppImage-Version=1.2.2

          [Desktop Action new-empty-window]
          Name=New Empty Window
          Name[cs]=Nové prázdné okno
          Name[de]=Neues leeres Fenster
          Name[es]=Nueva ventana vacía
          Name[fr]=Nouvelle fenêtre vide
          Name[it]=Nuova finestra vuota
          Name[ja]=新しい空のウィンドウ
          Name[ko]=새 빈 창
          Name[ru]=Новое пустое окно
          Name[zh_CN]=新建空窗口
          Name[zh_TW]=開新空視窗
          Exec={{ cursor_appimage_dir }}/Cursor.AppImage --no-sandbox %F
          Icon={{ cursor_appimage_dir }}/Cursor.png
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: '0644'

    ## ----------------------------------------------------
    ## Pin App to GNOME dock
    ## ----------------------------------------------------
    - name: Ensure python3-psutil is installed for dconf module
      ansible.builtin.apt:
        name: python3-psutil
        state: present

    - name: Get current GNOME dock favorites
      community.general.dconf:
        key: /org/gnome/shell/favorite-apps
        state: read
      become: true
      become_user: "{{ user }}"
      environment:
        HOME: "{{ user_home }}"
      register: current_favorites

    - name: Normalize GNOME favorites value to a list
      ansible.builtin.set_fact:
        gnome_favorites_list: >-
          {{
            (current_favorites.value
              | default([])
              | from_yaml
              if (current_favorites.value is string)
              else (current_favorites.value | default([]) | list)
            )
          }}

    - name: Pin app to GNOME dock favorites
      community.general.dconf:
        key: /org/gnome/shell/favorite-apps
        value: >-
          {{
            (gnome_favorites_list +
              ([app_desktop_file] if app_desktop_file not in gnome_favorites_list else [])
            ) | to_json
          }}
        state: present
      become: true
      become_user: "{{ user }}"
      environment:
        HOME: "{{ user_home }}"
      vars:
        app_desktop_file: "cursorai_cursor.desktop"
      when: app_desktop_file not in gnome_favorites_list